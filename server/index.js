const express = require('express');
const app = express();
const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const config = require('./config/config');
const { User } = require('./models/User');

app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

mongoose
    .connect(config.mongoURI, {
        useNewUrlParser: true, useUnifiedTopology: true, useCreateIndex: true, useFindAndModify: true,
    })
    .then(() => console.log('mongoDB is connected'))
    .catch(err => console.log(err));


/*////////////////////////////////////////////////////////////////////////////////////////////////
 *                              Root Path
 */////////////////////////////////////////////////////////////////////////////////////////////////
app.post('/test', (req, res) => {
    const testSchema = mongoose.Schema({
        name: {
            type: String,
        }
    })

    testSchema.pre('save', function (next) {
        test.name = 'hihihi';
        next();
    })

    const Test = mongoose.model('Test', testSchema, 'TEST')

    const test = new Test(req.body);

    test.save((err, doc) => {
        console.log(doc);
        if (err) return res.json({ success: false, err })

        return res.status(200).json({ success: true })
    })

})

/*////////////////////////////////////////////////////////////////////////////////////////////////
 *                              회원 등록
 */////////////////////////////////////////////////////////////////////////////////////////////////
app.post('/register', (req, res) => {

    const user = new User(req.body);

    user.save((err, doc) => {
        console.log('doc: ', doc);
        console.log('save err: ', err);

        if (err) return res.json({ success: false, err })

        return res.status(200).json({ success: true })
    })
})

/*////////////////////////////////////////////////////////////////////////////////////////////////
 *                              로그인
 */////////////////////////////////////////////////////////////////////////////////////////////////
app.post('/login', (req, res) => {

})

/*////////////////////////////////////////////////////////////////////////////////////////////////
 *                              동아리/학회 글 작성
 */////////////////////////////////////////////////////////////////////////////////////////////////
app.post('/clubContent', (req, res) => {

})

/*////////////////////////////////////////////////////////////////////////////////////////////////
 *                              스터디/소모임 글 작성
 */////////////////////////////////////////////////////////////////////////////////////////////////



/*////////////////////////////////////////////////////////////////////////////////////////////////
 *                              동아리/학회 댓글 작성
 */////////////////////////////////////////////////////////////////////////////////////////////////

/*////////////////////////////////////////////////////////////////////////////////////////////////
 *                              스터디/소모임 댓글 작성
 */////////////////////////////////////////////////////////////////////////////////////////////////

const port = 8000;
app.listen(port, () => {
    console.log(`Server listening at http://localhost:${port}`)
})